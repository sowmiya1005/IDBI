apiVersion: apps/v1
kind: StatefulSet
metadata: 
  name: idbi-apim-es-cluster
  annotations:
    # Having this annotation so that headless service always registers the IP address irrespective of probe status.
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  namespace: nsp-idbi-apim-prod
spec:
  serviceName: idbi-apim-es-svc-h
  replicas: 3
  selector:
    matchLabels:
      app: idbi-apim-es-cluster
  template:
    metadata:
      labels:
        app: idbi-apim-es-cluster
    spec:
      terminationGracePeriodSeconds: 10
      # affinity:
      #   # Pods will be placed in the worker node that has the label es-node=internaldatastore
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #       - matchExpressions:
      #         - key: elasticsearch-node
      #           operator: In
      #           values:
      #             - elasticsearch
      #   # Pods will label app=idbi-apim-es-cluster will not be placed together
      #   podAntiAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       - labelSelector:
      #           matchExpressions:
      #           - key: app
      #             operator: In
      #             values:
      #               - idbi-apim-es-cluster
      #         topologyKey: kubernetes.io/hostname

      # # Toleration condition for Pods when the node is tainted and the subsequent effect
      # tolerations:
      # - key: "node-role.kubernetes.io/elasticsearch"
      #   operator: "Exists"
        # effect: "NoSchedule"
      initContainers:
      - name: fix-permissions
        image: busybox
        command: ["sh", "-c", "chown -R 1000:1000 /usr/share/elasticsearch/data"]
        securityContext:
          privileged: true
        volumeMounts:
        - name: esdata
          mountPath: /usr/share/elasticsearch/data
      - name: increase-vm-max-map
        image: busybox
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      - name: increase-fd-ulimit
        image: busybox
        command: ["sh", "-c", "ulimit -n 65536"]
        securityContext:
          privileged: true
      containers:
      - name: idbi-apim-es-server
        image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.7.1
        resources:
          limits:
            cpu: "1"
            memory: "2Gi" 
          requests:
            cpu: "0.25"
            memory: "1Gi"
        ports:
        - containerPort: 9200
          name: rest-api
          protocol: TCP
        - containerPort: 9300
          name: inter-node-comm
          protocol: TCP
        volumeMounts:
        - name: esdata
          mountPath: /usr/share/elasticsearch/data
          readOnly: false
        env:
          - name: cluster.name
            value: SAG_EventDataStore
          - name: node.name
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: node.master
            value: "true"
          - name: node.ingest
            value: "true"
          - name: node.data
            value: "true"
          - name: discovery.seed_hosts
            value: "idbi-apim-es-cluster-0.idbi-apim-es-svc-h.nsp-idbi-apim-prod.svc.cluster.local:9300,idbi-apim-es-cluster-1.idbi-apim-es-svc-h.nsp-idbi-apim-prod.svc.cluster.local:9300, idbi-apim-es-cluster-2.idbi-apim-es-svc-h.nsp-idbi-apim-prod.svc.cluster.local:9300"
          - name: cluster.initial_master_nodes
            value: "idbi-apim-es-cluster-0,idbi-apim-es-cluster-1,idbi-apim-es-cluster-2"
          - name: discovery.zen.minimum_master_nodes
            value: "2"
          - name: ES_JAVA_OPTS
            value: "-Xms512m -Xmx512m"
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              #!/usr/bin/env bash -e
                HTTP_CODE=$(curl --output /dev/null -XGET -s -k "$@" ${BASIC_AUTH} "http://127.0.0.1:9200/_cluster/health?local=true" -w %{http_code})
                RC=$?
                if [[ ${RC} -ne 0 ]]; then
                  echo "Probe failed with RC ${RC}"
                  exit ${RC}
                fi
                if [[ ${HTTP_CODE} == "200" ]] || [[ ${HTTP_CODE} == "503" ]]; then
                  exit 0
                else
                  echo "Probe failed with HTTP code ${HTTP_CODE}"
                  exit 1
                fi
          initialDelaySeconds: 5
          periodSeconds: 3
          failureThreshold: 5
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              #!/usr/bin/env bash -e
                HTTP_CODE=$(curl --output /dev/null -XGET -s -k "$@" ${BASIC_AUTH} "http://127.0.0.1:9200/_cluster/health?local=true" -w %{http_code})
                RC=$?
                if [[ ${RC} -ne 0 ]]; then
                  echo "Probe failed with RC ${RC}"
                  exit ${RC}
                fi
                if [[ ${HTTP_CODE} == "200" ]] || [[ ${HTTP_CODE} == "503" ]]; then
                  exit 0
                else
                  echo "Probe failed with HTTP code ${HTTP_CODE}"
                  exit 1
                fi
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 5

  volumeClaimTemplates:
  - metadata:
      name: esdata
      labels:
        type: hostPath
    spec:
      storageClassName: standard
      accessModes: 
      - ReadWriteMany
      resources:
        requests:
          storage: 1Gi
      

